openapi: 3.0.3
info:
  title: hajk-backend
  description: Hajk backend
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Maps and layers
    description: Operations for retriving contents from the layers and maps database
  - name: Map and layers settings
    description: Preform CRUD operations on layers and map configurations
  - name: Documents
    description: Operations available for the "Documents API", used mainly by the Informative plugin
  - name: Sokigo FB Proxy
    description: Proxy specified in working with Sokigo's FB API
  - name: Specification
    description: The OpenAPI specification
  - name: Examples
    description: Simple example endpoint
paths:
  /examples:
    get:
      tags:
        - Examples
      description: Fetch all examples
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - Examples
      description: Create a new example
      requestBody:
        description: an example
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExampleBody"
        required: true
      responses:
        201:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /examples/{id}:
    get:
      tags:
        - Examples
      parameters:
        - name: id
          in: path
          description: The id of the example to retrieve
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Return the example with the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Example"
        4XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /informative/load/{name}:
    get:
      tags:
        - Documents
      parameters:
        - name: name
          in: path
          description: Name of the document to be fetched
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the JSON file
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentBody"
        5XX:
          description: Example not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /informative/list:
    get:
      tags:
        - Documents
      responses:
        200:
          description: Return all available documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentsList"
        5XX:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /config/layers:
    get:
      tags:
        - Maps and layers
      description: List available layers
      responses:
        200:
          description: All layers were fetched successfully
          content: {}
  /config/list:
    get:
      tags:
        - Maps and layers
      description: List available map configurations
      responses:
        200:
          description: Available maps were fetched successfully
          content: {}
  /config/{map}:
    get:
      tags:
        - Maps and layers
      parameters:
        - name: map
          in: path
          description: Name of the map to fetch
          required: true
          schema:
            type: string
      description: Fetch contents of a map configuration
      responses:
        200:
          description: Success
          content: {}
  /config/export/{map}/{format}:
    get:
      tags:
        - Maps and layers
      parameters:
        - name: map
          in: path
          description: Name of the map to fetch
          required: true
          schema:
            type: string
        - name: format
          in: path
          description: Name of the map to fetch
          required: true
          schema:
            type: string
      description: Exports the map's layers in a human-readable format
      responses:
        200:
          description: Success
          content: {}
  /config/create/{name}:
    get:
      tags:
        - Maps and layers
      parameters:
        - name: name
          in: path
          description: File name of the new map config
          required: true
          schema:
            type: string
      description: Create a new map configuration
      responses:
        200:
          description: Success
          content: {}
  /proxy/{query}:
    get:
      tags:
        - Sokigo FB Proxy
      parameters:
        - name: query
          in: path
          description: The query to be proxied
          required: true
          schema:
            type: string
      description: Proxy the specified query to Sokigo's FB API
      responses:
        200:
          description: Result will vary depending on response from the API
          content: {}
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
          content: {}
  /settings/layermenu:
    put:
      tags:
        - Map and layers settings
      requestBody:
        description: Settings for given map's LayerSwitcher component
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LayerSwitcherBody"
        required: true
      parameters:
        - name: mapFile
          in: query
          description: Name of the map who's LayerSwitcher config should be written
          required: true
          schema:
            type: string
      responses:
        204:
          description: All good
          content: {}
  /settings/mapsettings:
    put:
      tags:
        - Map and layers settings
      requestBody:
        description: Settings for given map's LayerSwitcher component
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LayerSwitcherBody"
        required: true
      parameters:
        - name: mapFile
          in: query
          description: Name of the map who's LayerSwitcher config should be written
          required: true
          schema:
            type: string
      responses:
        204:
          description: All good
          content: {}
  /settings/toolsettings:
    put:
      tags:
        - Map and layers settings
      requestBody:
        description: Settings for given map's LayerSwitcher component
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LayerSwitcherBody"
        required: true
      parameters:
        - name: mapFile
          in: query
          description: Name of the map who's LayerSwitcher config should be written
          required: true
          schema:
            type: string
      responses:
        204:
          description: All good
          content: {}
  /settings/{layer}:
    post:
      tags:
        - Map and layers settings
      requestBody:
        description: Layer to be added or updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExampleBody"
        required: true
      parameters:
        - name: layer
          in: path
          description: The layer type of the example to retrieve
          required: true
          schema:
            type: string
      responses:
        204:
          description: All good
          content: {}
    put:
      tags:
        - Map and layers settings
      requestBody:
        description: Layer to be added or updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExampleBody"
        required: true
      parameters:
        - name: layer
          in: path
          description: The layer type of the example to retrieve
          required: true
          schema:
            type: string
      responses:
        204:
          description: All good
          content: {}
    get:
      tags:
        - Map and layers settings
      parameters:
        - name: layer
          in: path
          description: The layer type of the example to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Return the example with the specified id
          content: {}
  /settings/{type}/{layerId}:
    delete:
      tags:
        - Map and layers settings
      parameters:
        - name: type
          in: path
          description: The kind of layer to delete
          required: true
          schema:
            type: string
        - name: layerId
          in: path
          description: The ID of layer to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Layer deleted successfully
          content: {}
components:
  schemas:
    Example:
      type: object
      properties:
        id:
          type: integer
          example: 3
        name:
          type: string
          example: example 3
    Error:
      type: object
      properties:
        errno:
          type: integer
          example: -2
        code:
          type: string
          example: ENOENT
    DocumentBody:
      type: object
      properties:
        chapters:
          type: array
          items:
            type: object
            properties:
              header:
                type: string
              html:
                type: string
              expanded:
                type: boolean
              mapSettings:
                type: object
              chapters:
                type: array
                items:
                  type: object
    DocumentsList:
      type: array
      items:
        type: string
      example: ["doc_1", "doc_2", "doc_3"]
    ExampleBody:
      title: example
      # required:
      #   - name
      type: object
      properties:
        name:
          type: string
          example: no_stress
    LayerSwitcherBody:
      title: LayerSwitcher body
